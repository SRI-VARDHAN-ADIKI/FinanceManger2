{"ast":null,"code":"import _taggedTemplateLiteral from\"C:\\\\Users\\\\adiki\\\\Desktop\\\\FinanceGit\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";import _objectSpread from\"C:\\\\Users\\\\adiki\\\\Desktop\\\\FinanceGit\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";var _templateObject;import React,{useState}from'react';import styled from'styled-components';import DatePicker from'react-datepicker';import\"react-datepicker/dist/react-datepicker.css\";import{useGlobalContext}from'../../context/globalContext';import Button from'../Button/Button';import{plus}from'../../utils/Icons';function ExpenseForm(){const{addExpense,error,setError}=useGlobalContext();const[inputState,setInputState]=useState({title:'',amount:'',date:'',category:'',description:''});const{title,amount,date,category,description}=inputState;const handleInput=name=>e=>{setInputState(_objectSpread(_objectSpread({},inputState),{},{[name]:e.target.value}));setError('');};const handleSubmit=e=>{e.preventDefault();addExpense(inputState);setInputState({title:'',amount:'',date:'',category:'',description:''});};return/*#__PURE__*/React.createElement(ExpenseFormStyled,{onSubmit:handleSubmit},error&&/*#__PURE__*/React.createElement(\"p\",{className:\"error\"},error),/*#__PURE__*/React.createElement(\"div\",{className:\"input-control\"},/*#__PURE__*/React.createElement(\"input\",{type:\"text\",value:title,name:'title',placeholder:\"Expense Title\",onChange:handleInput('title')})),/*#__PURE__*/React.createElement(\"div\",{className:\"input-control\"},/*#__PURE__*/React.createElement(\"input\",{value:amount,type:\"text\",name:'amount',placeholder:'Expense Amount',onChange:handleInput('amount')})),/*#__PURE__*/React.createElement(\"div\",{className:\"input-control\"},/*#__PURE__*/React.createElement(DatePicker,{id:\"date\",placeholderText:\"Enter A Date\",selected:date,dateFormat:\"dd/MM/yyyy\",onChange:date=>{setInputState(_objectSpread(_objectSpread({},inputState),{},{date:date}));}})),/*#__PURE__*/React.createElement(\"div\",{className:\"selects input-control\"},/*#__PURE__*/React.createElement(\"select\",{required:true,value:category,name:\"category\",id:\"category\",onChange:handleInput('category')},/*#__PURE__*/React.createElement(\"option\",{value:\"\",disabled:true},\"Select Option\"),/*#__PURE__*/React.createElement(\"option\",{value:\"education\"},\"Education\"),/*#__PURE__*/React.createElement(\"option\",{value:\"groceries\"},\"Groceries\"),/*#__PURE__*/React.createElement(\"option\",{value:\"health\"},\"Health\"),/*#__PURE__*/React.createElement(\"option\",{value:\"subscriptions\"},\"Subscriptions\"),/*#__PURE__*/React.createElement(\"option\",{value:\"takeaways\"},\"Takeaways\"),/*#__PURE__*/React.createElement(\"option\",{value:\"clothing\"},\"Clothing\"),/*#__PURE__*/React.createElement(\"option\",{value:\"travelling\"},\"Travelling\"),/*#__PURE__*/React.createElement(\"option\",{value:\"other\"},\"Other\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"input-control\"},/*#__PURE__*/React.createElement(\"textarea\",{name:\"description\",value:description,placeholder:\"Add A Reference\",id:\"description\",cols:\"30\",rows:\"4\",onChange:handleInput('description')})),/*#__PURE__*/React.createElement(\"div\",{className:\"submit-btn\"},/*#__PURE__*/React.createElement(Button,{name:'Add Expense',icon:plus,bPad:'.8rem 1.6rem',bRad:'30px',bg:'var(--color-accent',color:'#fff'})));}const ExpenseFormStyled=styled.form(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    display: flex;\\n    flex-direction: column;\\n    gap: 2rem;\\n    input, textarea, select{\\n        font-family: inherit;\\n        font-size: inherit;\\n        outline: none;\\n        border: none;\\n        padding: .5rem 1rem;\\n        border-radius: 5px;\\n        border: 2px solid #fff;\\n        background: transparent;\\n        resize: none;\\n        box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\\n        color: rgba(34, 34, 96, 0.9);\\n        &::placeholder{\\n            color: rgba(34, 34, 96, 0.4);\\n        }\\n    }\\n    .input-control{\\n        input{\\n            width: 100%;\\n        }\\n    }\\n\\n    .selects{\\n        display: flex;\\n        justify-content: flex-end;\\n        select{\\n            color: rgba(34, 34, 96, 0.4);\\n            &:focus, &:active{\\n                color: rgba(34, 34, 96, 1);\\n            }\\n        }\\n    }\\n\\n    .submit-btn{\\n        button{\\n            box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\\n            &:hover{\\n                background: var(--color-green) !important;\\n            }\\n        }\\n    }\\n\"])));export default ExpenseForm;","map":{"version":3,"names":["React","useState","styled","DatePicker","useGlobalContext","Button","plus","ExpenseForm","addExpense","error","setError","inputState","setInputState","title","amount","date","category","description","handleInput","name","e","_objectSpread","target","value","handleSubmit","preventDefault","createElement","ExpenseFormStyled","onSubmit","className","type","placeholder","onChange","id","placeholderText","selected","dateFormat","required","disabled","cols","rows","icon","bPad","bRad","bg","color","form","_templateObject","_taggedTemplateLiteral"],"sources":["C:/Users/adiki/Desktop/FinanceGit/frontend/src/Components/Expenses/ExpenseForm.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport DatePicker from 'react-datepicker'\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useGlobalContext } from '../../context/globalContext';\r\nimport Button from '../Button/Button';\r\nimport { plus } from '../../utils/Icons';\r\n\r\n\r\nfunction ExpenseForm() {\r\n    const {addExpense, error, setError} = useGlobalContext()\r\n    const [inputState, setInputState] = useState({\r\n        title: '',\r\n        amount: '',\r\n        date: '',\r\n        category: '',\r\n        description: '',\r\n    })\r\n\r\n    const { title, amount, date, category,description } = inputState;\r\n\r\n    const handleInput = name => e => {\r\n        setInputState({...inputState, [name]: e.target.value})\r\n        setError('')\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        addExpense(inputState)\r\n        setInputState({\r\n            title: '',\r\n            amount: '',\r\n            date: '',\r\n            category: '',\r\n            description: '',\r\n        })\r\n    }\r\n\r\n    return (\r\n        <ExpenseFormStyled onSubmit={handleSubmit}>\r\n            {error && <p className='error'>{error}</p>}\r\n            <div className=\"input-control\">\r\n                <input \r\n                    type=\"text\" \r\n                    value={title}\r\n                    name={'title'} \r\n                    placeholder=\"Expense Title\"\r\n                    onChange={handleInput('title')}\r\n                />\r\n            </div>\r\n            <div className=\"input-control\">\r\n                <input value={amount}  \r\n                    type=\"text\" \r\n                    name={'amount'} \r\n                    placeholder={'Expense Amount'}\r\n                    onChange={handleInput('amount')} \r\n                />\r\n            </div>\r\n            <div className=\"input-control\">\r\n                <DatePicker \r\n                    id='date'\r\n                    placeholderText='Enter A Date'\r\n                    selected={date}\r\n                    dateFormat=\"dd/MM/yyyy\"\r\n                    onChange={(date) => {\r\n                        setInputState({...inputState, date: date})\r\n                    }}\r\n                />\r\n            </div>\r\n            <div className=\"selects input-control\">\r\n                <select required value={category} name=\"category\" id=\"category\" onChange={handleInput('category')}>\r\n                    <option value=\"\" disabled >Select Option</option>\r\n                    <option value=\"education\">Education</option>\r\n                    <option value=\"groceries\">Groceries</option>\r\n                    <option value=\"health\">Health</option>\r\n                    <option value=\"subscriptions\">Subscriptions</option>\r\n                    <option value=\"takeaways\">Takeaways</option>\r\n                    <option value=\"clothing\">Clothing</option>  \r\n                    <option value=\"travelling\">Travelling</option>  \r\n                    <option value=\"other\">Other</option>  \r\n                </select>\r\n            </div>\r\n            <div className=\"input-control\">\r\n                <textarea name=\"description\" value={description} placeholder='Add A Reference' id=\"description\" cols=\"30\" rows=\"4\" onChange={handleInput('description')}></textarea>\r\n            </div>\r\n            <div className=\"submit-btn\">\r\n                <Button \r\n                    name={'Add Expense'}\r\n                    icon={plus}\r\n                    bPad={'.8rem 1.6rem'}\r\n                    bRad={'30px'}\r\n                    bg={'var(--color-accent'}\r\n                    color={'#fff'}\r\n                />\r\n            </div>\r\n        </ExpenseFormStyled>\r\n    )\r\n}\r\n\r\n\r\nconst ExpenseFormStyled = styled.form`\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 2rem;\r\n    input, textarea, select{\r\n        font-family: inherit;\r\n        font-size: inherit;\r\n        outline: none;\r\n        border: none;\r\n        padding: .5rem 1rem;\r\n        border-radius: 5px;\r\n        border: 2px solid #fff;\r\n        background: transparent;\r\n        resize: none;\r\n        box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\r\n        color: rgba(34, 34, 96, 0.9);\r\n        &::placeholder{\r\n            color: rgba(34, 34, 96, 0.4);\r\n        }\r\n    }\r\n    .input-control{\r\n        input{\r\n            width: 100%;\r\n        }\r\n    }\r\n\r\n    .selects{\r\n        display: flex;\r\n        justify-content: flex-end;\r\n        select{\r\n            color: rgba(34, 34, 96, 0.4);\r\n            &:focus, &:active{\r\n                color: rgba(34, 34, 96, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    .submit-btn{\r\n        button{\r\n            box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\r\n            &:hover{\r\n                background: var(--color-green) !important;\r\n            }\r\n        }\r\n    }\r\n`;\r\nexport default ExpenseForm"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}